name=Equals Entwurf
description=Die \"equals\" Methode in java.lang.Object kann von (fast) jeder Klasse ueberschrieben werden, aber sie hat einen Vertrag der erfuellt werden muss. Genauer gesagt, die equals-Methode implementiert eine Aequivalenz-Relation zwischen Instanzen der Klasse. Dies zu Programmieren kann durchaus mit Hindernissen behaftet sein, wenn man noch nicht viel Erfahrung darin hat, und selbst dann kann man einen wichtigen Schritt vergessen. Um die Gefahr von Fehlern beim Codieren einer equals-Implementierung zu minimieren, hat Joshua Bloch eine kurze Anleitung in seinem Buch \"Effective Java\" festgehalten:\n- Pruefe ob die Objekt-Referenzen identisch sind, falls ja, gib \"true\" zurueck\n- Pruefe ob das andere Objekt den richtigen Laufzeittyp hat mit dem \"instanceof\" Operator. Falls ja, caste das andere Objekt zu diesem Typen. Wenn nicht, gib \"false\" zurueck.\n- Pruefe fuer jedes Klassenattribut der beiden Instanzen, ob deren Werte uebereinstimmen und gib das Ergebnis zurueck.\nDieses Perfume prueft nur die ersten zwei Schritte als ein Vorlage, da der dritte Schritt ggf. sehr unterschiedlich aussehen kann, je nach Typ des Attributs. Das Perfume belohnt die Anwendung des Entwurfs, da es wichtig ist Best Practices zu kennen und anwenden zu koennen.
source=J. Bloch: Effective Java, Kapitel 3.1
additionalInformation=Das Perfume stellt nicht sicher, dass sich die Methode logisch korrekt verhaelt. Es wird lediglich die Struktur geprueft. Sollte deine \"equals\" Methode nicht wie erwartet funktionieren, schaue dir am besten jeden Schritt noch einmal detailliert an, besonders den Vergleich der Klassenattribute.