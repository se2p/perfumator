name=\"equals\" und \"hashCode\" gepaart
description=Die \"equals\" und \"hashCode\" Methoden in java.lang.Object koennen von (fast) jeder Klasse ueberschrieben werden. Es ist Best Practice die beiden Methoden gemeinsam zu ueberschreiben, ansonsten keine von beiden, um den Vertrag der Methoden nicht zu verletzen. Besonders der Vertrag der \"hashCode\" Methode besagt, dass wenn zwei Objekte durch die \"equals\" Implementierung als \"gleich\" gesehen werden, diese auch denselben Wert fuer \"hashCode\" haben muessen. Laut Vertrag ist es zwar kein Muss nach dem Ueberschreiben von \"hashCode\" auch \"equals\" zu ueberschreiben, da laut Vertrag zwei (nach \"equals\") unterschiedliche Objekte denselben \"hashCode\" haben duerfen, es ist aber trotzdem stark empfohlen, um ein konsistentes Verhalten sicherzustellen und um bessere Performance mit Hash-Tabllen zu erreichen. Ueberschreibt man nicht beide gemeinsam, fuehrt dies wahrscheinlich zu einer Verletzung des Vertrags der Methoden und kann zu schwer auffindbaren Problemen fuehren. SonarSource stuft dies als Bug ein.
additionalInformation=Obviously, overriding these methods together is just the first step towards fulfilling their contracts. The more difficult part, at least for inexperienced beginners, can be ensuring that the implementation of the methods does not violate the contract. For implementation guidance regarding the \"equals\" method, have a look at the \"Equals blueprint\" Perfume, it validates the basic structure and first steps for an \"equals\" implementation, that stays true to its contract.
