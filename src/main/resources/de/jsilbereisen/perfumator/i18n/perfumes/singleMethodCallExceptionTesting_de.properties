name=Einzelne Methodenaufrufe beim Testen von Laufzeitfehlern
description=Code durch Unit-Tests auf erwartete Laufzeitfehler zu pruefen ist wichtig, um das gewollte Verhalten sicherzustellen. Die Test-Frameworks "JUnit" (seit version 4.13) und "AssertJ" bieten elegante Loesungen fuer diese alltaegliche Aufgabe, jeweils mit der "assertThrows" oder "assertThatThrownBy" Methode. Fuer eine saubere Verwendung dieser Methoden sollte nicht mehr als ein aneinandergereihter Methodenaufruf erfolgen, welcher die erwartete Exception ausloesen soll, da sonst nicht auf den ersten Blick erkannbar ist, WELCHER von den aneinandergereihten Aufrufen den erwarteten Fehler eigentlich ausgeloest - oder auch nicht ausgeloest - hat. Man sollte also auf jeden Fall nur einen Methodenaufruf mit diesen Framework-Methoden verwenden, um verstaendlicheren Code und konsistenteren Code zu bekommen. Dieses Perfume ist von der "Only one method invocation is expected when testing runtime exceptions" Regel von SonarSource inspiriert, welches das Aneinanderreihen von Methoden in diesem Kontext als Code Smell einstuft.
additionalInformation=Dieses Perfume unterstuetzt die Methoden fuer das Testen von Exceptions der Frameworks "JUnit" (seit Version 4.13) und "AssertJ", sowie das Try-Catch-Idiom, welches das sauberste Exception-Testing Idiom fuer "JUnit" vor der Version 4.13 war. Das Try-Catch-Idiom wird jedoch nur als "parfuemiert" angesehen, wenn keine der Framework-Methoden importiert wurde, da diese bevorzugt werden sollten.